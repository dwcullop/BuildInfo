<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
    const string FMT_DATE_FORMAL = "MMMM d, yyyy h:mm:ss tt";
    const string FMT_DATE_COMMENT = "MMMM d, yyyy h:mm:ss.ffffff tt";

    DateTime dtBuildDate = DateTime.UtcNow;
    string   strBuildHash = String.Empty;
    string   strNamespace = String.Empty;

    var dte = ((IServiceProvider)Host).GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;

    try
    {
        strNamespace = ((EnvDTE.Project)((Array)dte.ActiveSolutionProjects).GetValue(0)).Properties.Item("DefaultNamespace").Value.ToString();
    }
    catch ( Exception /*e*/ )
    {
    }

    try
    {
        var directory = Path.GetDirectoryName(dte.Solution.FullName);
        strBuildHash = Process.Start(new ProcessStartInfo{FileName = "git", Arguments = "describe --long --always", UseShellExecute = false, RedirectStandardOutput = true, CreateNoWindow = true, WorkingDirectory = directory})
                                .StandardOutput
                                .ReadToEnd()
                                .Trim();
    }
    catch ( Exception /*e*/ )
    {
    }
#>
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
// NOTICE: DO NOT EDIT THIS FILE!
// 
// This file is autogenerated and your changes will be OVERWRITTEN! 
// Edit the corresponding .tt file instead.
//
// Or, better yet, make a lasting contribution by submitting a Pull Request:  
//      https://github.com/dwcullop/BuildInfo
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Reflection;

namespace <#=strNamespace #>
{
    public static class BuildInfo
    {
        private const long              BUILD_DATE_BINARY_UTC       = 0x<#=dtBuildDate.ToBinary().ToString("x16") #>;    // <#=dtBuildDate.ToString(FMT_DATE_COMMENT) #> UTC

        private static AssemblyName     BuildAssemblyName { get; }  = Assembly.GetExecutingAssembly().GetName();
        public static DateTimeOffset    BuildDateUtc { get; }       = DateTime.FromBinary(BUILD_DATE_BINARY_UTC);
        public static string            ModuleText { get; }         =  BuildAssemblyName.Name;
        public static string            BuildHash { get; }          = "<#=strBuildHash #>";
        public static string            VersionText { get; }        = "v" + BuildAssemblyName.Version.ToString()
<# if ( !String.IsNullOrEmpty(strBuildHash) ) 
{ #>
                                                                                + "." + BuildHash
<# } #>
#if DEBUG
                                                                                + " [DEBUG]"
#endif
                                                                                ;

        public static string            BuildDateText { get; }      = "<#=dtBuildDate.ToString(FMT_DATE_FORMAL) #> UTC";
        public static string            DisplayText { get; }        = $"{ModuleText} {VersionText} (Build Date: {BuildDateText})";
    }
}

